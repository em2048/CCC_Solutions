import java.util.*;
import java.io.*;

public class olympiads_hw {
	static List<Integer>[] adj;
	static int[] vis;

	static void dfs(int cur) {
		vis[cur] = 1;
		for (int next: adj[cur]) {
			if (vis[next] == 0) {
				dfs(next);
			} else if (vis[next] == 1) {
				System.out.println("N");
				System.exit(0);
			}
		}
		vis[cur] = 2;
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		StringTokenizer st;

		int n = Integer.parseInt(br.readLine());
		adj = new ArrayList[n + 1];
		vis = new int[n + 1];

		for (int i = 1; i <= n; i++) {
			adj[i] = new ArrayList<>();
		}
		int m = Integer.parseInt(br.readLine());
		for (int i = 0; i <m; i++) {
			st = new StringTokenizer(br.readLine());
			int src = Integer.parseInt(st.nextToken());
			int dest = Integer.parseInt(st.nextToken());
			
			adj[src].add(dest);
		}
		
		for (int i = 1; i <=n; i++) {
			if (vis[i]== 0) {
				dfs(i);
			}
		}
		System.out.println("Y");

	}
}
