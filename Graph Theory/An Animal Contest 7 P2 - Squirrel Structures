import java.util.*;
import java.io.*;

public class olympiads_hw {
	
	static List<Integer>[] adj;
	static List<Integer>[] adj1;
	static int n;
	static List<int[]> ans = new ArrayList<>();
	
	static void dfs(int cur, int prev) {
		for (int next : adj[cur]) {
			if (next == prev) continue;
			adj1[prev].add(next);
			dfs(next, cur);
		}
	}
	static void dfs1(int cur, int prev) {
		for (int next : adj1[cur]) {
			if (next == prev) continue;
			ans.add(new int[] {cur, next});
			dfs1(next, cur);
		}
	}
	
	static void print() {
		System.out.println(ans.size()+1);
		for (int[] arr : ans) {
			System.out.println(arr[0] + " " + arr[1]);
			
		}
		ans.clear();
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		StringTokenizer st;

		n = Integer.parseInt(br.readLine());
		adj = new ArrayList[n+1];
		adj1 = new ArrayList[n+1];
		
		for (int i = 0; i <=n; i++) {
			adj[i] = new ArrayList<>();
			adj1[i] = new ArrayList<>();
		}
		for (int i = 1; i <n; i++) {
			st = new StringTokenizer(br.readLine());
			int u = Integer.parseInt(st.nextToken());
			int v = Integer.parseInt(st.nextToken());
			adj[u].add(v);
			adj[v].add(u);
		}
		System.out.println(1 + adj[1].size());
		dfs(1, 0);
		dfs1(1, 0); print();
		for (int v : adj[1]) {
			dfs1(v, 0);
			print();
		}

	}
}
