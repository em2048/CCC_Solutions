import java.util.*;
import java.io.*;

public class olympiads_hw {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter out = new PrintWriter(System.out);
		StringTokenizer st;

		st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());

		List<Integer> adj[] = new ArrayList[n + 1];
		for (int i = 1; i <= n; i++) {
			adj[i] = new ArrayList<>();
		}
		for (int i = 0; i < m; i++) {
			st = new StringTokenizer(br.readLine());
			int u = Integer.parseInt(st.nextToken());
			int v = Integer.parseInt(st.nextToken());
			adj[u].add(v);
			adj[v].add(u);
		}
		Queue<Integer> q = new LinkedList<>();
		int[] dist = new int[n + 1];
		boolean[] vis = new boolean[n + 1];

		for (int k = Integer.parseInt(br.readLine()); k > 0; k--) {
			int start = Integer.parseInt(br.readLine());
			q.add(start);
			dist[start] = 0;
			vis[start] = true;
		}
		int last = 0;
		while (!q.isEmpty()) {
			int cur = q.poll();
			last = cur;
			for (int next : adj[cur]) {
				if (!vis[next]) {
					q.add(next);
					vis[next] = true;
					dist[next] = dist[cur] + 1;
				}
			}
		}
		System.out.println(dist[last]);

	}
}
